"""empty message

Revision ID: 08664b04e589
Revises: 9df0078e666a
Create Date: 2023-05-22 12:25:32.678457

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '08664b04e589'
down_revision = '9df0078e666a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['record_id'], ['records.id'], name=op.f('fk_users_records_record_id_records')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_users_records_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_records'))
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('users_record_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.drop_constraint('fk_comments_record_id_records', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_comments_users_record_id_users_records'), 'users_records', ['users_record_id'], ['id'])
        batch_op.drop_column('record_id')

    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('users_record_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.drop_constraint('fk_likes_record_id_records', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_likes_users_record_id_users_records'), 'users_records', ['users_record_id'], ['id'])
        batch_op.drop_column('record_id')

    with op.batch_alter_table('records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.drop_constraint('fk_records_user_id_users', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('records', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key('fk_records_user_id_users', 'users', ['user_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('record_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_likes_users_record_id_users_records'), type_='foreignkey')
        batch_op.create_foreign_key('fk_likes_record_id_records', 'records', ['record_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('users_record_id')

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('record_id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(batch_op.f('fk_comments_users_record_id_users_records'), type_='foreignkey')
        batch_op.create_foreign_key('fk_comments_record_id_records', 'records', ['record_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('users_record_id')

    op.drop_table('users_records')
    # ### end Alembic commands ###
